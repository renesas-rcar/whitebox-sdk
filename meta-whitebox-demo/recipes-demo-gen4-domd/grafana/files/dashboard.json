{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 31,
      "panels": [],
      "title": "Demo panel",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 36,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<style>\r\n  \r\n.demo_text {font-size: 3.5em;}\r\n.demo_btn {\r\n  background-color: #199319;\r\n  color: white;\r\n  padding: 2px 10px;\r\n  font-size: 1.8em;\r\n  font-size: 3.0em;\r\n  width:  99%;\r\n  border-radius: 100px;\r\n}\r\n.btn_on {\r\n  background-color: #cc3333;\r\n}\r\n.btn_off {\r\n  background-color: #333333;\r\n}\r\n</style>\r\n\r\n<button class=\"demo_btn btn_off\" id=\"Attack\"\r\n  onclick=\"btn_proc('Attack');\" value=\"OFF\">Attack: OFF</button>\r\n<br>\r\n<br>\r\n<button class=\"demo_btn btn_off\" id=\"IDS/IPS\"\r\n onclick=\"btn_proc('IDS/IPS');\" value=\"OFF\">IDS/IPS: OFF</button>\r\n<br>\r\n<br>\r\n<button class=\"demo_btn btn_on\" id=\"camera_button\"\r\nonclick=\"toggle_cam()\">Camera ON</button>\r\n<script>\r\nfunction getBtnState() {\r\n  var t = document.getElementById(\"Attack\");\r\n  return t.value;\r\n}\r\nfunction btn_proc(btnId, status=\"dummy\") {\r\n  // toggle button\r\n  var t = document.getElementById(btnId);\r\n  if(status == \"off\"){\r\n    t.value=\"OFF\";\r\n    t.innerHTML = btnId + \": OFF\"\r\n    t.className=\"demo_btn btn_off\" ;\r\n  }\r\n  else if(t.value==\"ON\"){\r\n    t.value=\"OFF\";\r\n    t.innerHTML = btnId + \": OFF\"\r\n    t.className=\"demo_btn btn_off\" ;\r\n  }\r\n  else if(t.value==\"OFF\"){\r\n    t.value=\"ON\";\r\n    t.innerHTML = btnId + \": ON\"\r\n    t.className=\"demo_btn btn_on\";\r\n  }\r\n\r\n  // Proc each function\r\n  if (btnId == \"Attack\"){\r\n    if (t.value == \"ON\")  send_fakedata();\r\n    if (t.value == \"OFF\") stop_fakedata();\r\n  }\r\n  if (btnId == \"IDS/IPS\"){\r\n    if (t.value == \"ON\")  start_snort();\r\n    if (t.value == \"OFF\") stop_snort();\r\n\t_ws.close();\r\n  }\r\n}\r\n</script>\r\n\r\n<script>\r\nvar base_json = {\"arg\":{\"Ver\":\"1\",\"Timestamp\":1678443770610,\"geometry\":{\"coordinates\":{\"Latitude\":0,\"Longitude\":0,\"Altitude\":0,\"HorizAccu\":0,\"AltAccu\":0,\"Heading\":0,\"HeadingAccu\":0,\"Speed\":0,\"SpeedAccu\":0}},\"RunningStatus\":{\"Acceleration\":{\"X\":0,\"Y\":0,\"Z\":0},\"Vehicle\":{\"Speed\":9999999000},\"Engine\":{\"Speed\":0},\"Brake\":{\"PedalPosition\":0},\"Accelerator\":{\"PedalPosition\":0},\"Fuel\":{\"Level\":0},\"SteeringWheel\":{\"Angle\":0},\"Transmission\":{\"Gear\":0},\"ParkingBrake\":{\"IsEngaged\":false},\"Battery\":{\"Capacity\":0}},\"Body\":{\"Door\":{\"FrontLeft\":{\"IsOpen\":false,\"IsLocked\":true,\"WindowPosition\":0,\"IsMirrorOpen\":true},\"FrontRight\":{\"IsOpen\":false,\"IsLocked\":true,\"WindowPosition\":0,\"IsMirrorOpen\":true},\"RearLeft\":{\"IsOpen\":false,\"IsLocked\":true,\"WindowPosition\":0},\"RearRight\":{\"IsOpen\":false,\"IsLocked\":true,\"WindowPosition\":0}},\"Bonnet\":{\"IsOpen\":false},\"Trunk\":{\"IsOpen\":false},\"Light\":{\"IsHazardOn\":false,\"IsLowBeamOn\":false,\"IsHighBeamOn\":false,\"IsFrontFogOn\":false,\"IsRearFogOn\":false},\"Wiper\":{\"Front\":{\"Status\":\"medium\"},\"Rear\":{\"Status\":\"off\"}},\"FuelCap\":{\"IsOpen\":false}},\"Cabin\":{\"Seat\":{\"FrontLeft\":{\"Recline\":0,\"IsSeatbeltOn\":true,\"IsAirbagDeployed\":false},\"FrontRight\":{\"Recline\":0,\"IsSeatbeltOn\":true,\"IsAirbagDeployed\":false},\"RearLeft\":{\"Recline\":0,\"IsSeatbeltOn\":true},\"RearRight\":{\"Recline\":0,\"IsSeatbeltOn\":true}},\"HVAC\":{\"FrontLeft\":{\"Temperature\":0},\"FrontRight\":{\"Temperature\":0},\"RearLeft\":{\"Temperature\":0},\"RearRight\":{\"Temperature\":0},\"AmbientAir\":{\"Temperature\":0}},\"Sunroof\":{\"Position\":0}},\"DriveTrain\":{\"Tire\":{\"FrontLeft\":{\"Pressure\":0},\"FrontRight\":{\"Pressure\":0},\"RearLeft\":{\"Pressure\":0},\"RearRight\":{\"Pressure\":0}},\"ADAS\":{\"SuspensionMode\":\"Normal\",\"ABS\":false},\"OBD\":{\"OilLevel\":0,\"CoolantTemperature\":0}},\"Navigation\":{\"SpeedLimit\":0,\"Turn\":{\"Direction\":\"\",\"Angle\":0},\"Curve\":{\"Direction\":\"\",\"Level\":\"\"}},\"Event\":{\"Unstable\":false,\"RedLight\":false,\"Tire\":false,\"Pedestrian\":false,\"Accident\":false,\"Approaching\":{\"Front\":false,\"Rear\":false,\"RearRight\":false,\"RearLeft\":false}}}}\r\nvar timerId = 0;\r\nvar _ws;\r\n\r\nconst _superInterval = (cb, interval=1000) => {\r\n  try {\r\n    const code = `self.addEventListener('message', msg=>{setInterval(()=>self.postMessage(null), msg.data)})`\r\n    const w = new Worker(`data:text/javascript;base64,${btoa(code)}`)\r\n    w.onmessage = () => cb()\r\n    w.postMessage(interval)\r\n    return {stop:()=>w.terminate()}\r\n  } catch(_){\r\n    // 実装の問題またはCSPによる拒否などで Worker が使えなければ普通の setInterval を使う\r\n    const id = setInterval(cb, interval)\r\n    return {stop:()=>clearInterval(id)}\r\n  }\r\n}\r\n\r\n/**\r\n * Sending Fakedata functions\r\n */\r\ng_sendingFlag = 0\r\nconst {stop} = _superInterval(send_loop, 300);//\r\nfunction send_fakedata(){\r\n  if (g_sendingFlag == 1) {\r\n    console.log(\"Already running.\")\r\n    return;\r\n  }\r\n  if( getBtnState() == \"OFF\" ) {\r\n\treturn;\r\n  }\r\n \r\n  var _hostname = window.location.hostname;\r\n  ws_url = \"ws://\"+_hostname+\":3000\"\r\n  // ws_url = \"ws://192.168.137.11:3000\"\r\n  _ws = new WebSocket(ws_url)\r\n  console.log(\"Connecting...\" , ws_url)\r\n  _ws.onopen = function () {\r\n\tg_sendingFlag = 1;\r\n    console.log(\"start Sending\")\r\n  };\r\n  _ws.onerror = function () {\r\n    console.log(\"Error\")\r\n    g_sendingFlag = 0;\r\n    if(getBtnState() == \"ON\") setTimeout(send_fakedata, 0)\r\n  };\r\n  _ws.onclose = function () {\r\n    console.log(\"Close\")\r\n    g_sendingFlag = 0;\r\n    if(getBtnState() == \"ON\") setTimeout(send_fakedata, 0)\r\n  };\r\n}\r\n\r\nfunction stop_fakedata(){\r\n  g_sendingFlag = 0;\r\n  _ws.close();\r\n}\r\n\r\nfunction send_loop() {\r\n  var t = document.getElementById(\"Attack\");\r\n  if ( t.value == \"OFF\") {\r\n\t// _ws.close();\r\n\tg_sendingFlag = 0;\r\n\treturn;\r\n  }\r\n  \r\n  var date = new Date();\r\n  base_json['arg']['timestamp'] = date.getTime();\r\n  _json_data = JSON.stringify(base_json);\r\n\r\n  if(g_sendingFlag == 0) {\r\n    //_ws.close()\r\n    return;\r\n  }\r\n\r\n  if(_ws.readyState == 1) {\r\n    console.log(\"hello\", _ws.bufferedAmount)\r\n    if (_ws.bufferedAmount == 0)\r\n      _ws.send(_json_data);\r\n  } else {\r\n    //_ws.close();\r\n  }\r\n}\r\n\r\n/**\r\n * Call S4 API functions\r\n */\r\nfunction get_req(url){\r\n  var _hostname = window.location.hostname;\r\n  if (_hostname !== \"localhost\") {\r\n    console.log(\"Get: \" + url);\r\n    return;\r\n  } else {\r\n    fetch(url, {\r\n      method: \"GET\"\r\n    })\r\n      .then((response) => response.text())\r\n      .then((text) => {});\r\n  }\r\n}\r\nfunction get_req_v2(url){\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open(\"GET\", url);\r\n  xhr.send();\r\n  xhr.onload = ()=> {\r\n    console.log(\"Get response\", xhr.response);\r\n  };\r\n}\r\nfunction snort_contorl(state) {\r\n  var hostname = window.location.hostname;\r\n  const url = \"http://\" + hostname + \":8000/snort?a=\" + state;\r\n  //const url = \"http://192.168.137.11:8000/snort?a=\" + state;\r\n  //get_req(url);\r\n  get_req_v2(url);\r\n}\r\nfunction start_snort(){\r\n  snort_contorl(\"on\")\r\n}\r\nfunction stop_snort(){\r\n  snort_contorl(\"off\")\r\n}\r\n</script>\r\n\r\n",
        "mode": "html"
      },
      "pluginVersion": "9.2.0",
      "title": "Control Panel",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisWidth": 66,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 33,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 10,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.job}",
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0.75
              },
              {
                "color": "red",
                "value": 0.85
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 11,
        "x": 12,
        "y": 1
      },
      "id": 39,
      "interval": "5",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(\r\n    (\r\n        sum by(job) (irate(node_cpu_seconds_total{job=\"S4 node\", mode!=\"idle\"}[$__rate_interval]) )\r\n        -\r\n        sum by(job) (irate(node_cpu_seconds_total{job=\"S4 node\", mode=\"softirq\"}[$__rate_interval]) )*1\r\n        -\r\n        sum by(job) (irate(node_cpu_seconds_total{job=\"S4 node\", mode=\"irq\"}[$__rate_interval]) )*1\r\n    )\r\n    / sum by(job) (\r\n        irate(node_cpu_seconds_total{job=\"S4 node\"}[$__rate_interval])\r\n    )\r\n)",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "S4 CPU Usage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 34,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<style>\r\n.camera {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  width: 98%;\r\n  height: 98%;\r\n  border: none;\r\n}\r\n.demo_btn {\r\n  background-color: #199319;\r\n  color: white;\r\n  padding: 2px 10px;\r\n  font-size: 1.8em;\r\n  font-size: 3.0em;\r\n  width:  99%;\r\n  border-radius: 100px;\r\n}\r\n.btn_on {\r\n  background-color: #cc3333;\r\n}\r\n.btn_off {\r\n  background-color: #333333;\r\n}\r\n</style>\r\n<!--\r\n<button onclick=\"show_cam();\">ON</button>\r\n<button onclick=\"hide_cam();\">OFF</button>\r\n-->\r\n\r\n<iframe src=\"http://10.0.2.1:5999/stream.html\" \r\nid=\"camera\" class=\"camera\" title=\"title\" scrolling=\"no\">\r\n</iframe>\r\n\r\n<script>\r\ncam_show = true;\r\nfunction toggle_cam() {\r\n  var cam_ele = document.getElementById(\"camera\");\r\n  var btn_ele = document.getElementById(\"camera_button\");\r\n\r\n  if (cam_show == true) {\r\n    cam_show = false;\r\n    cam_ele.src = \"\";\r\n    btn_ele.innerHTML = \"Camera OFF\"\r\n    btn_ele.className = \"demo_btn btn_off\"\r\n  }\r\n  else if (cam_show == false) {\r\n    cam_show = true;\r\n    cam_ele.src = \"http://10.0.2.1:5999/stream.html\";\r\n    btn_ele.innerHTML = \"Camera ON\"\r\n    btn_ele.className = \"demo_btn btn_on\"\r\n  }\r\n}\r\nfunction show_cam() {\r\n  var cam_ele = document.getElementById(\"camera\");\r\n  cam_ele.src = \"http://10.0.2.1:5999/stream.html\";\r\n}\r\nfunction hide_cam() {\r\n  var cam_ele = document.getElementById(\"camera\");\r\n  cam_ele.src = \"about:blank\";\r\n}\r\n\r\n</script>\r\n\r\n<script>\r\nvar reload_flag = 0\r\nconst timer = 5000; // 5 sec\r\nconst xhr = new XMLHttpRequest();\r\nxhr.timeout = 5000; // 5 sec\r\nxhr.ontimeout = (e) => {\r\n    console.log(\"Grafana: ontimeout\");\r\n  reload_flag = 1;\r\n};\r\nxhr.onload = (e) => {\r\n    console.log(\"Grafana: onload\");\r\n    if(reload_flag) {\r\n      // location.reload(); this cause reloading grafana\r\n      console.log(\"Grafana: Reload CAM\");\r\n      // toggle_cam(); toggle_cam();\r\n      //document.getElementById(\"camera\").contentWindow.location.reload(true);\r\n      if (cam_show == true) // if camera is on, reload iframe\r\n        document.getElementById('camera').src +=\"\";\r\n      //console.log(\"Grafana: \", document.getElementById('camera').src)\r\n      //document.getElementById('camera').src = document.getElementById('camera').src;\r\n      reload_flag = 0;\r\n    }\r\n};\r\nxhr.onerror = (e) => {\r\n    console.log(\"Grafana: onerror\");\r\n    reload_flag = 1;\r\n}\r\nvar callback_func = function() {\r\n    console.log(\"flag\")\r\n    xhr.open(\"GET\", \"http://10.0.2.1:8000\", true);\r\n    //xhr.withCredentials = true;\r\n    xhr.send(null);\r\n    setTimeout(callback_func,timer);\r\n};\r\nsetTimeout(callback_func,timer);\r\n</script>\r\n",
        "mode": "html"
      },
      "pluginVersion": "9.2.0",
      "title": "Camera Streaming",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 23,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "HW routing",
          "mappings": [],
          "max": 1000000000,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*trans.*/"
            },
            "properties": [
              {
                "id": "custom.transform",
                "value": "negative-Y"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 11,
        "x": 12,
        "y": 10
      },
      "id": 42,
      "interval": "5",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(\r\n    sum(\r\n        irate(node_network_receive_bytes_total{job=\"S4 node\", device=\"rmon0\"}[$__rate_interval])\r\n    )\r\n    +\r\n    sum(\r\n        irate(node_network_receive_bytes_total{job=\"S4 node\", device=\"rmon1\"}[$__rate_interval])\r\n    )\r\n    +\r\n    sum(\r\n        irate(node_network_receive_bytes_total{job=\"S4 node\", device=\"rmon2\"}[$__rate_interval])\r\n    )\r\n)*8\r\n",
          "hide": false,
          "interval": "",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "S4 Network Trafic",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 48,
      "panels": [],
      "title": "Other Panel",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 25
      },
      "id": 43,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<style>\r\n.btn {\r\n  background-color: #199319;\r\n  color: white;\r\n  padding: 25px 25px;\r\n}\r\n</style>\r\n<h3>\r\n<a href=\"/d/rYdddlPWk/node-exporter-full?orgId=1\" target=\"_blank\">\r\n<button class=\"btn\">H3 monitoring</button>\r\n</a>\r\n<br />\r\n<br />\r\n<a href=\"/d/rYdddlPWk/node-exporter-full?orgId=1&var-DS_PROMETHEUS=default&var-job=S4%20node&var-node=localhost:9100&var-diskdevices=%5Ba-z%5D%2B%7Cnvme%5B0-9%5D%2Bn%5B0-9%5D%2B%7Cmmcblk%5B0-9%5D%2B\"\r\n target=\"_blank\">\r\n <button class=\"btn\">S4 monitoring</button>\r\n</h3>\r\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.0",
      "title": "Panel Title",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bool_on_off"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 4,
        "y": 25
      },
      "id": 41,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "builder",
          "expr": "snort_tsn0_service_status",
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Snort-tsn0 status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.job}",
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 0.75
              },
              {
                "color": "red",
                "value": 0.85
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 7,
        "y": 25
      },
      "id": 22,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(sum by(job) (irate(node_cpu_seconds_total{job=\"S4 node\", mode!=\"idle\"}[$__rate_interval])) / on(job) group_left sum by (job)((irate(node_cpu_seconds_total{job=\"S4 node\"}[$__rate_interval]))))",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(sum by(job) (irate(node_cpu_seconds_total{job=\"H3 node\", mode!=\"idle\"}[$__rate_interval])) / on(job) group_left sum by (job)((irate(node_cpu_seconds_total{job=\"H3 node\"}[$__rate_interval]))))",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(sum by(job) (irate(node_cpu_seconds_total{job=\"M3 node\", mode!=\"idle\"}[$__rate_interval])) / on(job) group_left sum by (job)((irate(node_cpu_seconds_total{job=\"M3 node\"}[$__rate_interval]))))",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "CPU Usage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.job}",
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue"
              },
              {
                "color": "#EAB839",
                "value": 0.75
              },
              {
                "color": "red",
                "value": 0.85
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 11,
        "y": 25
      },
      "id": 21,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "(node_memory_MemTotal_bytes{job=\"S4 node\"}-node_memory_MemAvailable_bytes{job=\"S4 node\"})/node_memory_MemTotal_bytes{job=\"S4 node\"}",
          "hide": false,
          "instant": false,
          "legendFormat": "{{job_name}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(node_memory_MemTotal_bytes{job=\"H3 node\"}-node_memory_MemAvailable_bytes{job=\"H3 node\"})/node_memory_MemTotal_bytes{job=\"H3 node\"}",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "code",
          "expr": "(node_memory_MemTotal_bytes{job=\"M3 node\"}-node_memory_MemAvailable_bytes{job=\"M3 node\"})/node_memory_MemTotal_bytes{job=\"M3 node\"}",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "Memory Usage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "${__field.labels.job}",
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "#EAB839",
                "value": 2
              },
              {
                "color": "red",
                "value": 4
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 15,
        "y": 25
      },
      "id": 37,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "9.2.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "builder",
          "expr": "node_load1{job=\"S4 node\"}",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "editorMode": "builder",
          "expr": "node_load1{job=\"H3 node\"}",
          "hide": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Load Average",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 19,
        "y": 25
      },
      "id": 33,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<style>\r\n.btn {\r\n  background-color: #199319;\r\n  color: white;\r\n  padding: 15px 25px;\r\n}\r\n</style>\r\n<h3>\r\n<a href=\"https://www.renesas.com/whitebox-sdk\" target=\"_blank\">\r\n<button class=\"btn\">Go to Whitebox SDK Webpage</button>\r\n</a>\r\n<br />\r\n<br />\r\n<a href=\"https://github.com/renesas-rcar/whitebox-sdk\" target=\"_blank\">\r\n<button class=\"btn\">Go to Whitebox SDK repository</button>\r\n</a>\r\n</h3>\r\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.0",
      "title": "Panel Title",
      "type": "text"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "id": 9,
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 58,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "max": 40,
              "min": 15,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red"
                  },
                  {
                    "color": "yellow",
                    "value": 25
                  },
                  {
                    "color": "green",
                    "value": 30
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Value"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "light-yellow",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "{__name__=\"camera_fps\", instance=\"10.0.2.1:9100\", job=\"H3 node\"}"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 30
          },
          "id": 45,
          "interval": "1",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "9.2.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "expr": "30",
              "format": "time_series",
              "hide": false,
              "legendFormat": "{{label_name}}",
              "range": true,
              "refId": "B"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "builder",
              "expr": "camera_fps{job=\"H3 node\"}",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Camera FPS",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisWidth": 66,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 33,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 10,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "${__field.labels.job}",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 0.75
                  },
                  {
                    "color": "red",
                    "value": 0.85
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 11,
            "x": 12,
            "y": 30
          },
          "id": 46,
          "interval": "5",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "9.2.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "expr": "(\r\n    (\r\n        sum by(job) (\r\n            irate(node_cpu_seconds_total{job=\"S4 node\", mode!=\"idle\"}[$__rate_interval])\r\n        )\r\n        -\r\n        sum by(job) (\r\n            irate(node_cpu_seconds_total{job=\"S4 node\", mode=\"softirq\"}[$__rate_interval])\r\n        )\r\n        -\r\n        sum by(job) (\r\n            irate(node_cpu_seconds_total{job=\"S4 node\", mode=\"irq\"}[$__rate_interval])\r\n        )\r\n    )\r\n    / sum by(job) (\r\n        irate(node_cpu_seconds_total{job=\"S4 node\"}[$__rate_interval])\r\n    )\r\n)",
              "hide": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "S4 CPU Usage",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "gridPos": {
            "h": 5,
            "w": 9,
            "x": 0,
            "y": 38
          },
          "id": 40,
          "options": {
            "code": {
              "language": "plaintext",
              "showLineNumbers": false,
              "showMiniMap": false
            },
            "content": "\r\n\t<style>\r\n\t\t.demo_text { font-size: 2.5em;}\r\n\t\tinput.toggle { display: none; /* remove checkbox */ }\r\n\t\tlabel.toggle {\r\n\t\t  display: block; width: 12em; height: 1.5em;\t\t \r\n\t\t  border: 5px solid #aaa;\r\n\t\t  background: #ccc;\r\n\t\t  cursor: pointer;\r\n\t\t\tfont-size: 2.5em;\r\n\t\t}\r\n\t\tlabel.toggle::before {\r\n\t\t  display: block; width: 25%; height: 100%;\r\n\t\t  background: #2285f5;\r\n\t\t  content: \"OFF\";\r\n\t\t}\r\n\t\t/* OFF -> ON */\r\n\t\tinput.toggle:checked + label.toggle::before {\r\n\t\t  content: \"ON\";\r\n\t\t  position: relative; \r\n\t\t  left:75%;\r\n\t\t}\r\n\t\t/* OFF <- ON */\r\n\t\tinput.toggle:checked + label.toggle {\r\n\t\t}\r\n\r\n\t</style>\r\n\t\t<div style=\"display: flex;\">\r\n\t\t\t<span class=\"demo_text\">Attack!!</span>\r\n\t\t\t<input class=\"toggle\" type=\"checkbox\" id=\"TG_FakeData\">\r\n\t\t\t<label class=\"toggle\" for=\"TG_FakeData\"></label>\r\n\t\t</div>\r\n\t\t<br />\r\n\t\t<div style=\"display: flex;\">\r\n\t\t\t<span class=\"demo_text\">IPS/IDS</span>\r\n\t\t\t<input class=\"toggle\" type=\"checkbox\" id=\"TG_Snort\">\r\n\t\t\t<label class=\"toggle\" for=\"TG_Snort\"></label>\r\n\t\t</div>\r\n  \r\n<script>\r\nfunction btn_proc(btnId, status=\"dummy\") {\r\n  // toggle button\r\n  var t = document.getElementById(btnId);\r\n  if(status == \"off\"){\r\n    t.value=\"OFF\";\r\n    t.innerHTML = btnId + \": OFF\"\r\n    t.className=\"demo_btn btn_off\" ;\r\n  }\r\n  else if(t.value==\"ON\"){\r\n    t.value=\"OFF\";\r\n    t.innerHTML = btnId + \": OFF\"\r\n    t.className=\"demo_btn btn_off\" ;\r\n  }\r\n  else if(t.value==\"OFF\"){\r\n    t.value=\"ON\";\r\n    t.innerHTML = btnId + \": ON\"\r\n    t.className=\"demo_btn btn_on\";\r\n  }\r\n  console.log(\"Pushed\")\r\n  return;\r\n</script>\r\n\r\n",
            "mode": "html"
          },
          "pluginVersion": "9.2.0",
          "title": "Panel Title",
          "type": "text"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 23,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "displayName": "${__field.labels.device}",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/.*trans.*/"
                },
                "properties": [
                  {
                    "id": "custom.transform",
                    "value": "negative-Y"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 7,
            "w": 11,
            "x": 12,
            "y": 39
          },
          "id": 35,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "9.2.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "expr": "irate(node_network_receive_bytes_total{job=\"S4 node\"}[$__rate_interval])*8",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "expr": "irate(node_network_transmit_bytes_total{job=\"S4 node\"}[$__rate_interval])*8",
              "hide": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "S4 Network Trafic",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bool_on_off"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 0,
            "y": 43
          },
          "id": 38,
          "interval": "1s",
          "maxDataPoints": 500,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "limit": 1,
              "values": false
            },
            "showUnfilled": true
          },
          "pluginVersion": "9.2.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "builder",
              "expr": "node_systemd_unit_state{job=\"S4 node\", name=\"snort-tsn0.service\", state=\"active\"}",
              "hide": false,
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Snort-tsn0 service",
          "type": "bargauge"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "displayName": "${__field.labels.job} Zone=${__field.labels.zone}",
              "mappings": [],
              "max": 125,
              "min": -40,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 50
                  },
                  {
                    "color": "red",
                    "value": 85
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 4,
            "y": 43
          },
          "id": 25,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.2.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "builder",
              "expr": "node_thermal_zone_temp",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Temprature",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "displayName": "${__field.labels.job}",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 0.5
                  },
                  {
                    "color": "red",
                    "value": 0.85
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 12,
            "y": 46
          },
          "id": 24,
          "options": {
            "displayMode": "gradient",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true
          },
          "pluginVersion": "9.2.0",
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "prometheus"
              },
              "editorMode": "code",
              "expr": "(node_filesystem_size_bytes{mountpoint=\"/\"}-node_filesystem_free_bytes{mountpoint=\"/\"})/node_filesystem_size_bytes{ mountpoint=\"/\"}",
              "legendFormat": "__auto",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Rootfile System Usage",
          "type": "bargauge"
        }
      ],
      "title": "DEBUG",
      "type": "row"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Whitebox_demo_sample",
  "uid": "WhiteboxDemo",
  "version": 5,
  "weekStart": ""
}
