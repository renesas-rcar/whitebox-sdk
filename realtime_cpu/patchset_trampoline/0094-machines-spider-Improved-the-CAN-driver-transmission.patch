From 6210e2229a40758edff60782f2c4c870a86b4f39 Mon Sep 17 00:00:00 2001
From: Adrien Ricciardi <aricciardi@baylibre.com>
Date: Thu, 5 Oct 2023 17:28:44 +0200
Subject: [PATCH 21/38] machines: spider: Improved the CAN driver transmission
 function reliability.

The function now waits for the frame being fully transmitted and checks
a status bit that seems to be more accurate.

Signed-off-by: Adrien Ricciardi <aricciardi@baylibre.com>
---
 machines/cortex-a/armv8/spider/drivers/can/spider_can.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/machines/cortex-a/armv8/spider/drivers/can/spider_can.c b/machines/cortex-a/armv8/spider/drivers/can/spider_can.c
index e5740fe6..45261ba8 100644
--- a/machines/cortex-a/armv8/spider/drivers/can/spider_can.c
+++ b/machines/cortex-a/armv8/spider/drivers/can/spider_can.c
@@ -198,10 +198,6 @@ static Std_ReturnType spider_transmit(struct tpl_can_controller_t *ctrl, const C
 	if (pdu_info == NULL)
 		return E_NOT_OK;
 
-	// Wait for the previous frame to finish transmission
-	while (ctrl_base_address->CFDTMSTS0.BIT.TMTSTS);
-	ctrl_base_address->CFDTMSTS0.UINT8 = 0; // Clear TMTRF bits to allow the CFDTMCi.TMTR bit to be set again
-
 	// Set the CAN ID
 	ctrl_base_address->CFD0TMID0.UINT32 = pdu_info->id & 0x000007FF;
 
@@ -226,8 +222,12 @@ static Std_ReturnType spider_transmit(struct tpl_can_controller_t *ctrl, const C
 	ctrl_base_address->CFD0TMFDCTR0.UINT32 = 0;
 
 	// Start the frame transmission
+	ctrl_base_address->CFDTMSTS0.UINT8 = 0; // Clear TMTRF bits to allow the CFDTMCi.TMTR bit to be set again
 	ctrl_base_address->CFDTMC0.UINT8 = 0x01;
 
+	// Wait for the transmission to finish (this way the buffer used for transmission can't be altered by the code following the start of the transmission)
+	while (ctrl_base_address->CFDTMC0.BIT.TMTR);
+
 	return E_OK;
 }
 
-- 
2.34.1

