From 853e1612f82f594997f9526846110fb3a253c005 Mon Sep 17 00:00:00 2001
From: Valerio Setti <vsetti@baylibre.com>
Date: Tue, 5 Sep 2023 12:08:50 +0200
Subject: [PATCH 52/70] lwip: integrate into example project

PING works in this state.
Note: IP address is fixed at 192.168.1.2

Signed-off-by: Valerio Setti <vsetti@baylibre.com>
---
 .../armv8/spider/ethernet/build_lwip.sh       |  39 +++
 .../cortex-a/armv8/spider/ethernet/eth.oil    |   8 +-
 .../armv8/spider/ethernet/lwip-port/arch/cc.h |  32 ++
 .../armv8/spider/ethernet/lwip-port/ethif.c   | 144 +++++++++
 .../armv8/spider/ethernet/lwip-port/ethif.h   |  10 +
 .../spider/ethernet/lwip-port/lwipopts.h      | 296 ++++++++++++++++++
 .../spider/ethernet/lwip-port/sys_arch.c      |  41 +++
 .../spider/ethernet/lwip-port/toolchain.cmake |  19 ++
 .../cortex-a/armv8/spider/ethernet/main.c     |  89 ++----
 .../cortex-a/armv8/spider/ethernet/printf.h   |   2 +-
 .../cortex-a/armv8/spider/ethernet/rswitch.c  |   2 +-
 .../cortex-a/armv8/spider/ethernet/utils.h    |   4 +-
 12 files changed, 608 insertions(+), 78 deletions(-)
 create mode 100755 examples/cortex-a/armv8/spider/ethernet/build_lwip.sh
 create mode 100644 examples/cortex-a/armv8/spider/ethernet/lwip-port/arch/cc.h
 create mode 100644 examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.c
 create mode 100644 examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.h
 create mode 100644 examples/cortex-a/armv8/spider/ethernet/lwip-port/lwipopts.h
 create mode 100644 examples/cortex-a/armv8/spider/ethernet/lwip-port/sys_arch.c
 create mode 100644 examples/cortex-a/armv8/spider/ethernet/lwip-port/toolchain.cmake

diff --git a/examples/cortex-a/armv8/spider/ethernet/build_lwip.sh b/examples/cortex-a/armv8/spider/ethernet/build_lwip.sh
new file mode 100755
index 00000000..502cdde5
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/build_lwip.sh
@@ -0,0 +1,39 @@
+#!/usr/bin/env bash
+
+#stop on errors
+set -e
+
+function remove_items() {
+	ITEMS="$1"
+
+	for ITEM in $ITEMS; do
+		if [ $(ls $ITEM 2>/dev/null) ]; then
+			echo "Removing $ITEM"
+			rm $ITEM
+		fi
+	done
+}
+
+# Remove old libraries that will be replaced with the new build
+remove_items "liblwipallapps.a liblwipcore.a liblwipmbedtls.a"
+
+# Move to LwIP folder and create the build folder
+cd lwip
+
+if [[ -d "build" ]]; then
+	echo "Removing LwIP build folder"
+	rm -r build
+fi
+
+mkdir build
+cd build
+
+cmake -DCMAKE_TOOLCHAIN_FILE:PATH="../../lwip-port/toolchain.cmake" ..
+
+# Build only required libraries (no example)
+make -j lwipcore lwipallapps lwipmbedtls
+
+echo "Copying LwIP static libraries to local folder"
+cp liblwipcore.a ../..
+cp liblwipallapps.a ../..
+cp liblwipmbedtls.a ../..
diff --git a/examples/cortex-a/armv8/spider/ethernet/eth.oil b/examples/cortex-a/armv8/spider/ethernet/eth.oil
index 47b1798e..8b741998 100644
--- a/examples/cortex-a/armv8/spider/ethernet/eth.oil
+++ b/examples/cortex-a/armv8/spider/ethernet/eth.oil
@@ -22,9 +22,11 @@ CPU eth {
       APP_SRC = "rswitch.c";
       APP_SRC = "eth_gptp.c";
       APP_SRC = "printf.c";
+      APP_SRC = "lwip-port/sys_arch.c";
+      APP_SRC = "lwip-port/ethif.c";
       APP_NAME = "eth_exe.elf";
-      CFLAGS  = "-O0 -g -DHSCIF_1843200BPS";
-      LDFLAGS = "-Map=eth_exe.map";
+      CFLAGS  = "-O0 -g -DHSCIF_1843200BPS -I. -Ilwip/src/include -Ilwip-port";
+      LDFLAGS = "-Map=eth_exe.map -L. -llwipcore -llwipallapps";
       COMPILER = "arm-none-eabi-gcc";
       CPPCOMPILER = "arm-none-eabi-g++";
       ASSEMBLER = "arm-none-eabi-as";
@@ -51,7 +53,7 @@ CPU eth {
     SCHEDULE = FULL;
   };
 
-  TASK echo {
+  TASK monitor {
     PRIORITY = 1;
     AUTOSTART = FALSE;
     ACTIVATION = 1;
diff --git a/examples/cortex-a/armv8/spider/ethernet/lwip-port/arch/cc.h b/examples/cortex-a/armv8/spider/ethernet/lwip-port/arch/cc.h
new file mode 100644
index 00000000..6a302695
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/lwip-port/arch/cc.h
@@ -0,0 +1,32 @@
+#ifndef __ARCH_CC_H__
+#define __ARCH_CC_H__
+
+#include "utils.h"
+
+#define LWIP_ERR_T  int
+
+#define LWIP_PROVIDE_ERRNO
+
+/* Define (sn)printf formatters for these lwIP types */
+#define U16_F "u"
+#define S16_F "d"
+#define X16_F "x"
+#define U32_F "u"
+#define S32_F "d"
+#define X32_F "x"
+
+/* Compiler hints for packing structures */
+#define PACK_STRUCT_FIELD(x)    x
+#define PACK_STRUCT_STRUCT  __attribute__((packed))
+#define PACK_STRUCT_BEGIN
+#define PACK_STRUCT_END
+
+/* Plaform specific diagnostic output */
+#define LWIP_PLATFORM_DIAG(x)   do {                \
+        debug_msg x;                               \
+    } while (0)
+
+#define LWIP_PLATFORM_ASSERT(x) do {                \
+    } while (0)
+
+#endif /* __ARCH_CC_H__ */
diff --git a/examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.c b/examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.c
new file mode 100644
index 00000000..83f5525b
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.c
@@ -0,0 +1,144 @@
+#include <string.h>
+#include "ethif.h"
+#include "utils.h"
+#include "eth_serdes.h"
+#include "rswitch.h"
+#include "eth_gptp.h"
+#include "lwip/etharp.h"
+
+static struct netif *netif_ref = NULL;
+
+void ethif_callback(uint8 *data, uint16 len)
+{
+    struct pbuf *p, *q;
+    uint8_t *data_ptr = data;
+    err_t ret;
+
+    /* move received packet into a new pbuf */
+#if ETH_PAD_SIZE
+    len += ETH_PAD_SIZE; /* allow room for Ethernet padding */
+#endif
+    /* We allocate a pbuf chain of pbufs from the pool. */
+    p = pbuf_alloc(PBUF_RAW, len, PBUF_POOL);
+    if (p == NULL) {
+        debug_msg("Error: unable to allocate memory in %s", __func__);
+        return;
+    }
+
+#if ETH_PAD_SIZE
+    pbuf_remove_header(p, ETH_PAD_SIZE); /* drop the padding word */
+#endif
+    /* We iterate over the pbuf chain until we have read the entire
+     * packet into the pbuf. */
+    for (q = p; q != NULL; q = q->next) {
+        memcpy(q->payload, data_ptr, q->len);
+        data_ptr += q->len;
+    }
+#if ETH_PAD_SIZE
+    pbuf_add_header(p, ETH_PAD_SIZE); /* reclaim the padding word */
+#endif
+
+    /* pass all packets to ethernet_input, which decides what packets it supports */
+    ret = netif_ref->input(p, netif_ref);
+    if (ret != ERR_OK) {
+        debug_msg("Error: netif->input returned %d\n", ret);
+        pbuf_free(p);
+    }
+}
+
+static err_t low_level_output(struct netif *netif, struct pbuf *p)
+{
+    (void) netif;
+    struct pbuf *q;
+    int ret;
+
+#if ETH_PAD_SIZE
+    pbuf_remove_header(p, ETH_PAD_SIZE); /* drop the padding word */
+#endif
+
+    for (q = p; q != NULL; q = q->next) {
+        /* Send the data from the pbuf to the interface, one pbuf at a
+        time. The size of the data in each pbuf is kept in the ->len
+        variable. */
+        ret = rswitch_send_data(q->payload, q->len);
+        if (ret != 0) {
+            return ERR_IF;
+        }
+    }
+
+#if ETH_PAD_SIZE
+    pbuf_add_header(p, ETH_PAD_SIZE); /* reclaim the padding word */
+#endif
+
+    return ERR_OK;
+}
+
+static err_t low_level_init(struct netif *netif)
+{
+    int ret;
+
+    netif->hwaddr_len = ETHARP_HWADDR_LEN;
+    /* This is the same value set in "rswitch.c" */
+    netif->hwaddr[0] = 0x74U;
+    netif->hwaddr[1] = 0x90U;
+    netif->hwaddr[2] = 0x50U;
+    netif->hwaddr[3] = 0x00U;
+    netif->hwaddr[4] = 0x00U;
+    netif->hwaddr[5] = 0x00U;
+    netif->mtu = 1500;
+
+    /* device capabilities */
+    /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
+    netif->flags = NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP | NETIF_FLAG_ETHERNET | NETIF_FLAG_LINK_UP;
+
+    // Interrupt initializazion done by Trampoline
+    eth_disable_fuse_ovr();
+
+    ret = eth_serdes_initialize();
+    if (ret != 0) {
+        debug_msg("Error in eth_serdes_initialize");
+        return ERR_IF;
+    }
+    debug_msg("SERDES initialization done");
+
+    ret = rswitch_init();
+    if (ret != 0) {
+        debug_msg("Error in rswitch_init\n");
+        return ERR_IF;
+    }
+    debug_msg("RSwitch initialization done");
+
+    debug_msg("Initialize gPTP");
+    eth_gptp_init();
+
+    ret = rswitch_open();
+    if (ret != 0) {
+        debug_msg("Error in rswitch_open\n");
+        return ERR_IF;
+    }
+    debug_msg("RSwitch open completed");
+
+    rswitch_regiter_data_received_callback(ethif_callback);
+
+    debug_msg("Initialization completed");
+
+    return ERR_OK;
+}
+
+err_t ethif_init(struct netif *netif)
+{
+    debug_msg("%s", __func__);
+
+    netif_ref = netif;
+
+    netif->name[0] = 'r';
+    netif->name[1] = 'n';
+    netif->mtu = 1500;
+
+    netif->state = NULL; // Set to anything, if necessary
+
+    netif->linkoutput = low_level_output;
+    netif->output = etharp_output;
+
+    return low_level_init(netif);
+}
\ No newline at end of file
diff --git a/examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.h b/examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.h
new file mode 100644
index 00000000..60225bd2
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/lwip-port/ethif.h
@@ -0,0 +1,10 @@
+#ifndef _ETHERNET_IF_H_
+#define _ETHERNET_IF_H_
+
+#include "lwip/init.h"
+#include "lwip/err.h"
+#include "lwip/netif.h"
+
+err_t ethif_init(struct netif *netif);
+
+#endif // _ETHERNET_IF_H_
\ No newline at end of file
diff --git a/examples/cortex-a/armv8/spider/ethernet/lwip-port/lwipopts.h b/examples/cortex-a/armv8/spider/ethernet/lwip-port/lwipopts.h
new file mode 100644
index 00000000..c4712053
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/lwip-port/lwipopts.h
@@ -0,0 +1,296 @@
+#define LWIP_DEBUG                      1
+/* test an lwipopts.h file with default contents */
+#define NO_SYS                          1
+#define NO_SYS_NO_TIMERS                1
+#define LWIP_TIMERS                     1
+#define LWIP_TIMERS_CUSTOM              0
+#define LWIP_MPU_COMPATIBLE             0
+#define LWIP_TCPIP_CORE_LOCKING         1
+#define LWIP_TCPIP_CORE_LOCKING_INPUT   0
+#define SYS_LIGHTWEIGHT_PROT            0
+#define MEM_LIBC_MALLOC                 0
+#define MEMP_MEM_MALLOC                 0
+#define MEMP_MEM_INIT                   0
+#define MEM_ALIGNMENT                   1
+#define MEM_SIZE                        1600
+#define MEMP_OVERFLOW_CHECK             0
+#define MEMP_SANITY_CHECK               0
+#define MEM_OVERFLOW_CHECK              0
+#define MEM_SANITY_CHECK                0
+#define MEM_USE_POOLS                   0
+#define MEM_USE_POOLS_TRY_BIGGER_POOL   0
+#define MEMP_USE_CUSTOM_POOLS           0
+#define LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT 0
+/*#define MEMP_NUM_PBUF                   16
+#define MEMP_NUM_RAW_PCB                4
+#define MEMP_NUM_UDP_PCB                4
+#define MEMP_NUM_TCP_PCB                5
+#define MEMP_NUM_TCP_PCB_LISTEN         8
+#define MEMP_NUM_TCP_SEG                16
+#define MEMP_NUM_ALTCP_PCB              MEMP_NUM_TCP_PCB
+#define MEMP_NUM_REASSDATA              5
+#define MEMP_NUM_FRAG_PBUF              15
+#define MEMP_NUM_ARP_QUEUE              30
+#define MEMP_NUM_IGMP_GROUP             8
+#define MEMP_NUM_SYS_TIMEOUT            (LWIP_NUM_SYS_TIMEOUT_INTERNAL + 2)
+#define MEMP_NUM_NETBUF                 2
+#define MEMP_NUM_NETCONN                4
+#define MEMP_NUM_SELECT_CB              4
+#define MEMP_NUM_TCPIP_MSG_API          8
+#define MEMP_NUM_TCPIP_MSG_INPKT        8
+#define MEMP_NUM_NETDB                  1
+#define MEMP_NUM_LOCALHOSTLIST          1
+#define PBUF_POOL_SIZE                  16
+#define MEMP_NUM_API_MSG                MEMP_NUM_TCPIP_MSG_API
+#define MEMP_NUM_DNS_API_MSG            MEMP_NUM_TCPIP_MSG_API
+#define MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA MEMP_NUM_TCPIP_MSG_API
+#define MEMP_NUM_NETIFAPI_MSG           MEMP_NUM_TCPIP_MSG_API*/
+#define LWIP_ARP                        1
+#define ARP_TABLE_SIZE                  10
+#define ARP_MAXAGE                      300
+#define ARP_QUEUEING                    0
+#define ARP_QUEUE_LEN                   3
+#define ETHARP_SUPPORT_VLAN             0
+#define LWIP_ETHERNET                   LWIP_ARP
+#define ETH_PAD_SIZE                    0
+#define ETHARP_SUPPORT_STATIC_ENTRIES   0
+#define ETHARP_TABLE_MATCH_NETIF        !LWIP_SINGLE_NETIF
+#define LWIP_IPV4                       1
+#define IP_FORWARD                      0
+#define IP_REASSEMBLY                   1
+#define IP_FRAG                         1
+#define IP_OPTIONS_ALLOWED              1
+#define IP_REASS_MAXAGE                 15
+#define IP_REASS_MAX_PBUFS              10
+#define IP_DEFAULT_TTL                  255
+#define IP_SOF_BROADCAST                0
+#define IP_SOF_BROADCAST_RECV           0
+#define IP_FORWARD_ALLOW_TX_ON_RX_NETIF 0
+#define LWIP_ICMP                       1
+#define ICMP_TTL                        (IP_DEFAULT_TTL)
+#define LWIP_BROADCAST_PING             0
+#define LWIP_MULTICAST_PING             0
+#define LWIP_RAW                        0
+#define RAW_TTL                         (IP_DEFAULT_TTL)
+#define LWIP_DHCP                       1
+#define LWIP_DHCP_CHECK_LINK_UP         0
+#define LWIP_DHCP_BOOTP_FILE            0
+#define LWIP_DHCP_GET_NTP_SRV           0
+#define LWIP_DHCP_MAX_NTP_SERVERS       1
+#define LWIP_DHCP_MAX_DNS_SERVERS       DNS_MAX_SERVERS
+#define LWIP_AUTOIP                     0
+#define LWIP_DHCP_AUTOIP_COOP           0
+#define LWIP_DHCP_AUTOIP_COOP_TRIES     9
+#define LWIP_MIB2_CALLBACKS             0
+#define LWIP_MULTICAST_TX_OPTIONS       ((LWIP_IGMP || LWIP_IPV6_MLD) && (LWIP_UDP || LWIP_RAW))
+#define LWIP_IGMP                       0
+#define LWIP_DNS                        0
+#define DNS_TABLE_SIZE                  4
+#define DNS_MAX_NAME_LENGTH             256
+#define DNS_MAX_SERVERS                 2
+#define DNS_MAX_RETRIES                 4
+#define DNS_DOES_NAME_CHECK             1
+#define LWIP_DNS_SECURE (LWIP_DNS_SECURE_RAND_XID | LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING | LWIP_DNS_SECURE_RAND_SRC_PORT)
+#define DNS_LOCAL_HOSTLIST              0
+#define DNS_LOCAL_HOSTLIST_IS_DYNAMIC   0
+#define LWIP_DNS_SUPPORT_MDNS_QUERIES   0
+#define LWIP_UDP                        1
+#define LWIP_UDPLITE                    0
+#define UDP_TTL                         (IP_DEFAULT_TTL)
+#define LWIP_NETBUF_RECVINFO            0
+#define LWIP_TCP                        0
+#define TCP_TTL                         (IP_DEFAULT_TTL)
+#define TCP_WND                         (4 * TCP_MSS)
+#define TCP_MAXRTX                      12
+#define TCP_SYNMAXRTX                   6
+#define TCP_QUEUE_OOSEQ                 (LWIP_TCP)
+#define LWIP_TCP_SACK_OUT               0
+#define LWIP_TCP_MAX_SACK_NUM           4
+#define TCP_MSS                         536
+#define TCP_CALCULATE_EFF_SEND_MSS      1
+#define TCP_SND_BUF                     (2 * TCP_MSS)
+#define TCP_SND_QUEUELEN                ((4 * (TCP_SND_BUF) + (TCP_MSS - 1))/(TCP_MSS))
+#define TCP_SNDLOWAT                    LWIP_MIN(LWIP_MAX(((TCP_SND_BUF)/2), (2 * TCP_MSS) + 1), (TCP_SND_BUF) - 1)
+#define TCP_SNDQUEUELOWAT               LWIP_MAX(((TCP_SND_QUEUELEN)/2), 5)
+#define TCP_OOSEQ_MAX_BYTES             0
+#define TCP_OOSEQ_BYTES_LIMIT(pcb)      TCP_OOSEQ_MAX_BYTES
+#define TCP_OOSEQ_MAX_PBUFS             0
+#define TCP_OOSEQ_PBUFS_LIMIT(pcb)      TCP_OOSEQ_MAX_PBUFS
+#define TCP_LISTEN_BACKLOG              0
+#define TCP_DEFAULT_LISTEN_BACKLOG      0xff
+#define TCP_OVERSIZE                    TCP_MSS
+#define LWIP_TCP_TIMESTAMPS             0
+#define TCP_WND_UPDATE_THRESHOLD        LWIP_MIN((TCP_WND / 4), (TCP_MSS * 4))
+#define LWIP_EVENT_API                  0
+#define LWIP_CALLBACK_API               1
+#define LWIP_WND_SCALE                  0
+#define TCP_RCV_SCALE                   0
+#define LWIP_TCP_PCB_NUM_EXT_ARGS       0
+#define LWIP_ALTCP                      0
+#define LWIP_ALTCP_TLS                  0
+#define PBUF_LINK_HLEN                  (14 + ETH_PAD_SIZE)
+#define PBUF_LINK_ENCAPSULATION_HLEN    0
+#define PBUF_POOL_BUFSIZE               LWIP_MEM_ALIGN_SIZE(TCP_MSS+40+PBUF_LINK_ENCAPSULATION_HLEN+PBUF_LINK_HLEN)
+#define LWIP_PBUF_REF_T                 u8_t
+#define LWIP_SINGLE_NETIF               0
+#define LWIP_NETIF_HOSTNAME             0
+#define LWIP_NETIF_API                  0
+#define LWIP_NETIF_STATUS_CALLBACK      0
+#define LWIP_NETIF_EXT_STATUS_CALLBACK  0
+#define LWIP_NETIF_LINK_CALLBACK        0
+#define LWIP_NETIF_REMOVE_CALLBACK      0
+#define LWIP_NETIF_HWADDRHINT           0
+#define LWIP_NETIF_TX_SINGLE_PBUF       0
+#define LWIP_NUM_NETIF_CLIENT_DATA      0
+#define LWIP_HAVE_LOOPIF                (LWIP_NETIF_LOOPBACK && !LWIP_SINGLE_NETIF)
+#define LWIP_LOOPIF_MULTICAST           0
+#define LWIP_NETIF_LOOPBACK             0
+#define LWIP_LOOPBACK_MAX_PBUFS         0
+#define LWIP_NETIF_LOOPBACK_MULTITHREADING    (!NO_SYS)
+/*#define TCPIP_THREAD_NAME               "tcpip_thread"
+#define TCPIP_THREAD_STACKSIZE          0
+#define TCPIP_THREAD_PRIO               1
+#define TCPIP_MBOX_SIZE                 0
+#define LWIP_TCPIP_THREAD_ALIVE()
+#define SLIPIF_THREAD_NAME              "slipif_loop"
+#define SLIPIF_THREAD_STACKSIZE         0
+#define SLIPIF_THREAD_PRIO              1
+#define DEFAULT_THREAD_NAME             "lwIP"
+#define DEFAULT_THREAD_STACKSIZE        0
+#define DEFAULT_THREAD_PRIO             1
+#define DEFAULT_RAW_RECVMBOX_SIZE       0
+#define DEFAULT_UDP_RECVMBOX_SIZE       0
+#define DEFAULT_TCP_RECVMBOX_SIZE       0
+#define DEFAULT_ACCEPTMBOX_SIZE         0*/
+#define LWIP_NETCONN                    0
+#define LWIP_TCPIP_TIMEOUT              0
+#define LWIP_NETCONN_SEM_PER_THREAD     0
+#define LWIP_NETCONN_FULLDUPLEX         0
+#define LWIP_SOCKET                     0
+#define LWIP_COMPAT_SOCKETS             1 /* 0..2 */
+#define LWIP_POSIX_SOCKETS_IO_NAMES     1
+#define LWIP_SOCKET_OFFSET              0
+#define LWIP_TCP_KEEPALIVE              0
+#define LWIP_SO_SNDTIMEO                0
+#define LWIP_SO_RCVTIMEO                0
+#define LWIP_SO_SNDRCVTIMEO_NONSTANDARD 0
+#define LWIP_SO_RCVBUF                  0
+#define LWIP_SO_LINGER                  0
+#define RECV_BUFSIZE_DEFAULT            INT_MAX
+#define LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT 20000
+#define SO_REUSE                        0
+#define SO_REUSE_RXTOALL                0
+#define LWIP_FIONREAD_LINUXMODE         0
+#define LWIP_SOCKET_SELECT              1
+#define LWIP_SOCKET_POLL                1
+#define LWIP_STATS                      1
+#define LWIP_STATS_DISPLAY              0
+#define LINK_STATS                      1
+#define ETHARP_STATS                    (LWIP_ARP)
+#define IP_STATS                        1
+#define IPFRAG_STATS                    (IP_REASSEMBLY || IP_FRAG)
+#define ICMP_STATS                      1
+#define IGMP_STATS                      (LWIP_IGMP)
+#define UDP_STATS                       (LWIP_UDP)
+#define TCP_STATS                       (LWIP_TCP)
+#define MEM_STATS                       ((MEM_LIBC_MALLOC == 0) && (MEM_USE_POOLS == 0))
+#define MEMP_STATS                      (MEMP_MEM_MALLOC == 0)
+#define SYS_STATS                       (NO_SYS == 0)
+#define IP6_STATS                       (LWIP_IPV6)
+#define ICMP6_STATS                     (LWIP_IPV6 && LWIP_ICMP6)
+#define IP6_FRAG_STATS                  (LWIP_IPV6 && (LWIP_IPV6_FRAG || LWIP_IPV6_REASS))
+#define MLD6_STATS                      (LWIP_IPV6 && LWIP_IPV6_MLD)
+#define ND6_STATS                       (LWIP_IPV6)
+#define MIB2_STATS                      0
+#define LWIP_CHECKSUM_CTRL_PER_NETIF    0
+#define CHECKSUM_GEN_IP                 1
+#define CHECKSUM_GEN_UDP                1
+#define CHECKSUM_GEN_TCP                1
+#define CHECKSUM_GEN_ICMP               1
+#define CHECKSUM_GEN_ICMP6              1
+#define CHECKSUM_CHECK_IP               1
+#define CHECKSUM_CHECK_UDP              1
+#define CHECKSUM_CHECK_TCP              1
+#define CHECKSUM_CHECK_ICMP             1
+#define CHECKSUM_CHECK_ICMP6            1
+#define LWIP_CHECKSUM_ON_COPY           0
+#define LWIP_IPV6                       0
+#define IPV6_REASS_MAXAGE               60
+#define LWIP_IPV6_SCOPES                (LWIP_IPV6 && !LWIP_SINGLE_NETIF)
+#define LWIP_IPV6_SCOPES_DEBUG          0
+#define LWIP_IPV6_NUM_ADDRESSES         3
+#define LWIP_IPV6_FORWARD               0
+#define LWIP_IPV6_FRAG                  1
+#define LWIP_IPV6_REASS                 (LWIP_IPV6)
+#define LWIP_IPV6_SEND_ROUTER_SOLICIT   1
+#define LWIP_IPV6_AUTOCONFIG            (LWIP_IPV6)
+#define LWIP_IPV6_ADDRESS_LIFETIMES     (LWIP_IPV6_AUTOCONFIG)
+#define LWIP_IPV6_DUP_DETECT_ATTEMPTS   1
+#define LWIP_ICMP6                      (LWIP_IPV6)
+#define LWIP_ICMP6_DATASIZE             8
+#define LWIP_ICMP6_HL                   255
+#define LWIP_IPV6_MLD                   (LWIP_IPV6)
+#define MEMP_NUM_MLD6_GROUP             4
+#define LWIP_ND6_QUEUEING               (LWIP_IPV6)
+#define MEMP_NUM_ND6_QUEUE              20
+#define LWIP_ND6_NUM_NEIGHBORS          10
+#define LWIP_ND6_NUM_DESTINATIONS       10
+#define LWIP_ND6_NUM_PREFIXES           5
+#define LWIP_ND6_NUM_ROUTERS            3
+#define LWIP_ND6_MAX_MULTICAST_SOLICIT  3
+#define LWIP_ND6_MAX_UNICAST_SOLICIT    3
+#define LWIP_ND6_MAX_ANYCAST_DELAY_TIME 1000
+#define LWIP_ND6_MAX_NEIGHBOR_ADVERTISEMENT  3
+#define LWIP_ND6_REACHABLE_TIME         30000
+#define LWIP_ND6_RETRANS_TIMER          1000
+#define LWIP_ND6_DELAY_FIRST_PROBE_TIME 5000
+#define LWIP_ND6_ALLOW_RA_UPDATES       1
+#define LWIP_ND6_TCP_REACHABILITY_HINTS 1
+#define LWIP_ND6_RDNSS_MAX_DNS_SERVERS  0
+#define LWIP_IPV6_DHCP6                 0
+#define LWIP_IPV6_DHCP6_STATEFUL        0
+#define LWIP_IPV6_DHCP6_STATELESS       LWIP_IPV6_DHCP6
+#define LWIP_DHCP6_GET_NTP_SRV          0
+#define LWIP_DHCP6_MAX_NTP_SERVERS      1
+#define LWIP_DHCP6_MAX_DNS_SERVERS      DNS_MAX_SERVERS
+
+/* TODO: check hooks */
+
+#define LWIP_DBG_MIN_LEVEL              LWIP_DBG_LEVEL_ALL
+#define LWIP_DBG_TYPES_ON               LWIP_DBG_ON
+#define ETHARP_DEBUG                    LWIP_DBG_ON
+#define NETIF_DEBUG                     LWIP_DBG_OFF
+#define PBUF_DEBUG                      LWIP_DBG_OFF
+#define API_LIB_DEBUG                   LWIP_DBG_OFF
+#define API_MSG_DEBUG                   LWIP_DBG_OFF
+#define SOCKETS_DEBUG                   LWIP_DBG_OFF
+#define ICMP_DEBUG                      LWIP_DBG_ON
+#define IGMP_DEBUG                      LWIP_DBG_OFF
+#define INET_DEBUG                      LWIP_DBG_OFF
+#define IP_DEBUG                        LWIP_DBG_ON
+#define IP_REASS_DEBUG                  LWIP_DBG_OFF
+#define RAW_DEBUG                       LWIP_DBG_OFF
+#define MEM_DEBUG                       LWIP_DBG_OFF
+#define MEMP_DEBUG                      LWIP_DBG_OFF
+#define SYS_DEBUG                       LWIP_DBG_OFF
+#define TIMERS_DEBUG                    LWIP_DBG_OFF
+#define TCP_DEBUG                       LWIP_DBG_OFF
+#define TCP_INPUT_DEBUG                 LWIP_DBG_OFF
+#define TCP_FR_DEBUG                    LWIP_DBG_OFF
+#define TCP_RTO_DEBUG                   LWIP_DBG_OFF
+#define TCP_CWND_DEBUG                  LWIP_DBG_OFF
+#define TCP_WND_DEBUG                   LWIP_DBG_OFF
+#define TCP_OUTPUT_DEBUG                LWIP_DBG_OFF
+#define TCP_RST_DEBUG                   LWIP_DBG_OFF
+#define TCP_QLEN_DEBUG                  LWIP_DBG_OFF
+#define UDP_DEBUG                       LWIP_DBG_OFF
+#define TCPIP_DEBUG                     LWIP_DBG_OFF
+#define SLIP_DEBUG                      LWIP_DBG_OFF
+#define DHCP_DEBUG                      LWIP_DBG_OFF
+#define AUTOIP_DEBUG                    LWIP_DBG_OFF
+#define DNS_DEBUG                       LWIP_DBG_OFF
+#define IP6_DEBUG                       LWIP_DBG_OFF
+#define DHCP6_DEBUG                     LWIP_DBG_OFF
+#define LWIP_TESTMODE                   0
+
+#define LWIP_PERF                       0
diff --git a/examples/cortex-a/armv8/spider/ethernet/lwip-port/sys_arch.c b/examples/cortex-a/armv8/spider/ethernet/lwip-port/sys_arch.c
new file mode 100644
index 00000000..029a96e9
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/lwip-port/sys_arch.c
@@ -0,0 +1,41 @@
+#include "lwip/sys.h"
+
+u32_t sys_now(void)
+{
+  return 0;
+}
+
+static int hexval(char c) {
+    if (c >= '0' && c <= '9')
+        return c - '0';
+    else if (c >= 'a' && c <= 'f')
+        return c - 'a' + 10;
+    else if (c >= 'A' && c <= 'F')
+        return c - 'A' + 10;
+    return 0;
+}
+
+/* This is needed because "netif.c" uses it and without this implementation
+ * this would cause LIBC to be included and that's something we don't want. */
+unsigned int atoi(const unsigned char *num) {
+  long value = 0;
+  int neg = 0;
+
+  if (num[0] == '0' && num[1] == 'x') {
+      // hex
+      num += 2;
+      while (*num && isxdigit(*num))
+          value = value * 16 + hexval(*num++);
+  } else {
+      // decimal
+      if (num[0] == '-') {
+          neg = 1;
+          num++;
+      }
+      while (*num && isdigit(*num))
+          value = value * 10 + *num++  - '0';
+  }
+  if (neg)
+      value = -value;
+  return value;
+}
\ No newline at end of file
diff --git a/examples/cortex-a/armv8/spider/ethernet/lwip-port/toolchain.cmake b/examples/cortex-a/armv8/spider/ethernet/lwip-port/toolchain.cmake
new file mode 100644
index 00000000..45306551
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/ethernet/lwip-port/toolchain.cmake
@@ -0,0 +1,19 @@
+set(CMAKE_SYSTEM_NAME Generic)
+
+set(CMAKE_C_COMPILER "arm-none-eabi-gcc")
+
+set(CMAKE_C_FLAGS "-std=c99 -mcpu=cortex-r52 -mfloat-abi=soft -O0 -g")
+set(CMAKE_EXE_LINKER_FLAGS "-nostdlib")
+
+set(LWIP_COMPILER_FLAGS -std=c99 -mcpu=cortex-r52 -mfloat-abi=soft -O0 -g)
+
+set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+
+set(LWIP_DIR ${CMAKE_CURRENT_SOURCE_DIR})
+set (LWIP_INCLUDE_DIRS
+    "${LWIP_DIR}/src/include"
+    "${LWIP_DIR}/../lwip-port"
+    "${LWIP_DIR}/.."
+)
diff --git a/examples/cortex-a/armv8/spider/ethernet/main.c b/examples/cortex-a/armv8/spider/ethernet/main.c
index 577a7c94..afb727ed 100644
--- a/examples/cortex-a/armv8/spider/ethernet/main.c
+++ b/examples/cortex-a/armv8/spider/ethernet/main.c
@@ -1,16 +1,17 @@
 #include "tpl_os.h"
 #include "utils.h"
-#include "eth_serdes.h"
-#include "rswitch.h"
-#include "eth_gptp.h"
 #include "serial.h"
 #include "string.h"
+#include "lwip/netif.h"
+#include "lwip/ip4_addr.h"
+#include "lwip/timeouts.h"
+#include "lwip-port/ethif.h"
 
 #define APP_Task_sample_init_START_SEC_CODE
 #include "tpl_memmap.h"
 
-uint8 tmp_buffer[1600];
-uint16 tmp_buffer_len = 0;
+ip4_addr_t ip4_addr, net_mask, gateway;
+struct netif ethif_netif;
 
 // Is this the right section for the main function??
 FUNC(int, OS_APPL_CODE) main(void)
@@ -19,91 +20,39 @@ FUNC(int, OS_APPL_CODE) main(void)
 	return 0;
 }
 
-void eth_callback(uint8 *data, uint16 len)
-{
-	/* Copy the data into the local buffer and then activate the Echo task */
-	memcpy(tmp_buffer, data, len);
-	tmp_buffer_len = len;
-	ActivateTask(echo);
-}
-
 TASK(sample_init) {
-	int ret;
-
 	Serial_Init();
 
 	rswitch_enable_clock_and_reset();
 	port_init();
-	// Interrupt initializazion done by Trampoline
-	eth_disable_fuse_ovr();
 
-	ret = eth_serdes_initialize();
-	if (ret != 0) {
-		debug_msg("Error in eth_serdes_initialize");
-		goto exit;
-	}
-	debug_msg("SERDES initialization done");
+	lwip_init();
 
-	ret = rswitch_init();
-	if (ret != 0) {
-		debug_msg("Error in rswitch_init\n");
-		goto exit;
-	}
-	debug_msg("RSwitch initialization done");
+	IP4_ADDR(&ip4_addr, 192, 168, 1, 2);
+	IP4_ADDR(&net_mask, 255, 255, 255, 0);
+	IP4_ADDR(&gateway, 0, 0, 0, 0);
 
-	debug_msg("Initialize gPTP");
-	eth_gptp_init();
+	netif_add(&ethif_netif, &ip4_addr, &net_mask, &gateway, NULL,
+				ethif_init, netif_input);
 
-	ret = rswitch_open();
-	if (ret != 0) {
-		debug_msg("Error in rswitch_open\n");
-		goto exit;
-	}
-	debug_msg("RSwitch open completed");
+	netif_set_up(&ethif_netif);
 
-	rswitch_regiter_data_received_callback(eth_callback);
+	ActivateTask(monitor);
 
-	debug_msg("Initialization completed");
-exit:
 	TerminateTask();
 }
 
 #define APP_Task_sample_init_STOP_SEC_CODE
 #include "tpl_memmap.h"
 
-#define APP_Task_echo_START_SEC_CODE
+#define APP_Task_sample_init_START_SEC_CODE
 #include "tpl_memmap.h"
 
-TASK(echo)
-{
-	int ret;
-	uint8 src_mac[6];
-	uint8 dst_mac[6];
-
-	debug_msg("## Echo task ##");
-
-	debug_msg("Received:");
-	debug_print_buffer(tmp_buffer, tmp_buffer_len);
-
-	/* Swap MAC addresses just to play a little with the data */
-	memcpy(src_mac, &tmp_buffer[0], 6);
-	memcpy(dst_mac, &tmp_buffer[6], 6);
-	memcpy(&tmp_buffer[0], dst_mac, 6);
-	memcpy(&tmp_buffer[6], src_mac, 6);
-
-	ret = rswitch_send_data(tmp_buffer, tmp_buffer_len);
-	if (ret != 0) {
-		debug_msg("Send data back: FAILED");
-	} else {
-		debug_msg("Send data back: SUCCESS");
+TASK(monitor) {
+	while (1) {
+		sys_check_timeouts();
 	}
-
-	/* Clear the data for the next iteration */
-	memset(tmp_buffer, 0, sizeof(tmp_buffer));
-	tmp_buffer_len = 0;
-
-	TerminateTask();
 }
 
-#define APP_Task_echo_STOP_SEC_CODE
+#define APP_Task_sample_init_STOP_SEC_CODE
 #include "tpl_memmap.h"
\ No newline at end of file
diff --git a/examples/cortex-a/armv8/spider/ethernet/printf.h b/examples/cortex-a/armv8/spider/ethernet/printf.h
index c1ad80b9..783dda2e 100644
--- a/examples/cortex-a/armv8/spider/ethernet/printf.h
+++ b/examples/cortex-a/armv8/spider/ethernet/printf.h
@@ -1,4 +1,4 @@
-#include "tpl_os.h"
+#include "../../../../../../machines/virt-v7/tpl_os_std_types.h"
 
 int debug_printf(const char *format, ...);
 int debug_sprintf(char *out, const char *format, ...);
\ No newline at end of file
diff --git a/examples/cortex-a/armv8/spider/ethernet/rswitch.c b/examples/cortex-a/armv8/spider/ethernet/rswitch.c
index dc0cc965..086972d5 100644
--- a/examples/cortex-a/armv8/spider/ethernet/rswitch.c
+++ b/examples/cortex-a/armv8/spider/ethernet/rswitch.c
@@ -916,7 +916,7 @@ ISR(gwca1_rx_tx_int)
     uint16 data_len;
     int i;
 
-    debug_msg("%s", __func__);
+    // debug_msg("%s", __func__);
 
     chain = &rsw_dev.gwca->rx_chain;
     if (chain->irq_triggered != 0) {
diff --git a/examples/cortex-a/armv8/spider/ethernet/utils.h b/examples/cortex-a/armv8/spider/ethernet/utils.h
index 4eedbf8b..de0d73aa 100644
--- a/examples/cortex-a/armv8/spider/ethernet/utils.h
+++ b/examples/cortex-a/armv8/spider/ethernet/utils.h
@@ -1,7 +1,7 @@
 #ifndef _UTILS_H_
 #define _UTILS_H_
 
-#include "tpl_os.h"
+#include "../../../../../../machines/virt-v7/tpl_os_std_types.h"
 #include "printf.h"
 
 #define debug_msg(...) \
@@ -18,8 +18,6 @@
         (((~(0UL)) - ((1UL) << (l)) + 1) & \
          (~(0UL) >> (BITS_PER_LONG - 1 - (h))))
 
-#define __unused    __attribute__((unused))
-
 #define CHECK_RET(f)    \
     ret = (f); \
     if (ret != 0) { \
-- 
2.34.1

