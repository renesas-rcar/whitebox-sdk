From a30af0392070bddba42081f3eee0d1069e6851a4 Mon Sep 17 00:00:00 2001
From: Tsutomu Muroya <tsutomu.muroya.jy@bp.renesas.com>
Date: Thu, 9 Nov 2023 13:03:45 +0900
Subject: [PATCH] trampoline: s4sk: Add CAN disabled environment

Signed-off-by: Tsutomu Muroya <tsutomu.muroya.jy@bp.renesas.com>
---
 .../armv8/spider/sample/build_not_can.sh      | 15 ++++
 .../armv8/spider/sample/sample_not_can.c      | 10 +++
 .../armv8/spider/sample/sample_not_can.oil    | 72 +++++++++++++++++++
 3 files changed, 97 insertions(+)
 create mode 100755 examples/cortex-a/armv8/spider/sample/build_not_can.sh
 create mode 100644 examples/cortex-a/armv8/spider/sample/sample_not_can.c
 create mode 100644 examples/cortex-a/armv8/spider/sample/sample_not_can.oil

diff --git a/examples/cortex-a/armv8/spider/sample/build_not_can.sh b/examples/cortex-a/armv8/spider/sample/build_not_can.sh
new file mode 100755
index 00000000..300e49e2
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/sample/build_not_can.sh
@@ -0,0 +1,15 @@
+#!/usr/bin/env bash
+
+#stop on errors
+set -e
+
+if [[ ! -d "_build" ]]
+then
+    mkdir _build
+fi
+
+echo "*** Run Goil ***"
+goil --target=cortex-a/armv8/spider --templates=../../../../../goil/templates/ sample_not_can.oil
+
+echo "*** Run Make ***"
+./make.py
diff --git a/examples/cortex-a/armv8/spider/sample/sample_not_can.c b/examples/cortex-a/armv8/spider/sample/sample_not_can.c
new file mode 100644
index 00000000..f0712d0c
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/sample/sample_not_can.c
@@ -0,0 +1,10 @@
+#include <string.h>
+#include "serial.h"
+
+FUNC(int, OS_APPL_CODE) main(void)
+{
+	Serial_Init();
+	StartOS(OSDEFAULTAPPMODE);
+	return 0;
+}
+
diff --git a/examples/cortex-a/armv8/spider/sample/sample_not_can.oil b/examples/cortex-a/armv8/spider/sample/sample_not_can.oil
new file mode 100644
index 00000000..1cdb468e
--- /dev/null
+++ b/examples/cortex-a/armv8/spider/sample/sample_not_can.oil
@@ -0,0 +1,72 @@
+OIL_VERSION = "4.2";
+
+IMPLEMENTATION trampoline {
+  TASK {
+    UINT32 STACKSIZE = 2048 ;
+  } ;
+
+  ISR {
+    UINT32 STACKSIZE = 2048 ;
+  } ;
+};
+
+CPU iccom {
+  OS config {
+    STATUS = EXTENDED;
+
+    BUILD = TRUE {
+      TRAMPOLINE_BASE_PATH = "../../../../..";
+      APP_SRC = "sample_not_can.c";
+      APP_SRC = "iccom.c";
+      APP_SRC = "iccom_ll.c";
+      APP_SRC = "benchmark.c";
+      APP_SRC = "dhrystone/dhry_1.c";
+      APP_SRC = "dhrystone/dhry_2.c";
+      APP_SRC = "coremark/barebones/core_portme.c";
+      APP_SRC = "coremark/core_list_join.c";
+      APP_SRC = "coremark/core_main.c";
+      APP_SRC = "coremark/core_matrix.c";
+      APP_SRC = "coremark/core_state.c";
+      APP_SRC = "coremark/core_util.c";
+      APP_NAME = "sample_exe.elf";
+      CFLAGS  = "-O3";
+      CFLAGS  = "-DHSCIF_1843200BPS";
+      LDFLAGS = "-Map=iccom.map";
+      COMPILER = "arm-none-eabi-gcc";
+      CPPCOMPILER = "arm-none-eabi-g++";
+      ASSEMBLER = "arm-none-eabi-as";
+      LINKER = "arm-none-eabi-ld";
+      COPIER = "arm-none-eabi-objcopy";
+      SYSTEM = PYTHON;
+      CFLAGS="-Wno-stringop-truncation"; // Avoid strncpy warnings
+      CFLAGS="-Wno-return-type -Wno-implicit-int -Wno-implicit-function-declaration"; // Avoid dhrystone warnings
+      CFLAGS="-DTIME=TIME";
+      // CFLAGS="-DCOREMARK_DEBUG"; // for Debug
+      CFLAGS="-I./coremark -I./coremark/barebones -DITERATIONS=30000";
+      LIBRARY = serial;
+
+    };
+    SYSTEM_CALL = TRUE;
+    MEMMAP = TRUE {
+      COMPILER = gcc;
+      LINKER = gnu_ld { SCRIPT = "script.ld"; };
+      ASSEMBLER = gnu_as;
+      MEMORY_PROTECTION = FALSE;
+    };
+  };
+
+  APPMODE std {};
+
+  TASK iccom {
+    PRIORITY = 1;
+    AUTOSTART = TRUE { APPMODE = std; };
+    ACTIVATION = 1;
+    SCHEDULE = FULL;
+  };
+
+  ISR iccomInt {
+    CATEGORY = 2;
+    PRIORITY = 1;
+    SOURCE = ICCOM_INT;
+  };
+};
-- 
2.25.1

