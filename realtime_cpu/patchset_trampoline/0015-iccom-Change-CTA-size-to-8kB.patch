From ab03c72ba5a11d6ed99f40b43e94365a66ccb867 Mon Sep 17 00:00:00 2001
From: Tsutomu Muroya <tsutomu.muroya.jy@bp.renesas.com>
Date: Mon, 8 May 2023 17:30:47 +0900
Subject: [PATCH] iccom: Change CTA size to 8kB

Signed-off-by: Tsutomu Muroya <tsutomu.muroya.jy@bp.renesas.com>
---
 examples/cortex-a/armv8/spider/iccom/iccom.c        | 13 ++++++++++---
 .../cortex-a/armv8/spider/iccom/iccom_commands.h    |  5 +++--
 examples/cortex-a/armv8/spider/iccom/iccom_ll.c     |  2 +-
 3 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/examples/cortex-a/armv8/spider/iccom/iccom.c b/examples/cortex-a/armv8/spider/iccom/iccom.c
index 572d8f0d..557b8ebb 100644
--- a/examples/cortex-a/armv8/spider/iccom/iccom.c
+++ b/examples/cortex-a/armv8/spider/iccom/iccom.c
@@ -25,6 +25,7 @@ enum ICCOM_MSG {
 #define HOST_INT_CLEAR_TIMEOUT_MS		(500U*TIMER_TICKS_PER_MS)
 
 uint8 iccom_initalized = 0;
+struct echo_command recv_pkt;
 
 static void iccom_notify_tx_data(size_t message)
 {
@@ -84,6 +85,8 @@ static void iccom_handle_rx_msg(size_t size)
 	// Casting to the most simple structure in order to get the "cmd_id".
 	// Later the proper casting will be done
 	in_pkt = (struct command_header*) iccom_get_read_cta_ptr();
+	// copy packet before sending ACK
+	memcpy(&recv_pkt, in_pkt, size);
 	iccom_send_rx_data_ack((uint32)size);
 	ret = iccom_wait_for_out_interrupt_clear(HOST_INT_CLEAR_TIMEOUT_MS);
 	if (ret < 0) {
@@ -93,12 +96,16 @@ static void iccom_handle_rx_msg(size_t size)
 	}
 
 	switch (in_pkt->cmd_id) {
+		case NONE: {
+			// Nothing to do
+			break;
+		}
+
 		case ECHO: {
-			struct echo_command* cmd_pkt = (struct echo_command*) in_pkt;
-			struct echo_reply* reply_pkt = (struct echo_reply*) iccom_cta_write_cta_ptr();
+			struct echo_reply* reply_pkt = iccom_cta_write_cta_ptr();
 
 			// Just copy the data back
-			memcpy(reply_pkt, cmd_pkt, size);
+			memcpy(reply_pkt, &recv_pkt, size);
 			iccom_send((uint8*)reply_pkt, size, 0);
 			break;
 		}
diff --git a/examples/cortex-a/armv8/spider/iccom/iccom_commands.h b/examples/cortex-a/armv8/spider/iccom/iccom_commands.h
index 1aafc2cb..a443ecce 100644
--- a/examples/cortex-a/armv8/spider/iccom/iccom_commands.h
+++ b/examples/cortex-a/armv8/spider/iccom/iccom_commands.h
@@ -20,10 +20,11 @@
 #endif
 
 enum iccom_command {
-	ECHO = 0,
+	NONE = 0,
+	ECHO,
 };
 
-#define TOTAL_CTA_SIZE		0x4000
+#define TOTAL_CTA_SIZE		0x2000
 #define ICCOM_BUF_MAX_SIZE	(TOTAL_CTA_SIZE/2) // Max size of each transaction (read/write)
 
 // this is the common header shared between all commands
diff --git a/examples/cortex-a/armv8/spider/iccom/iccom_ll.c b/examples/cortex-a/armv8/spider/iccom/iccom_ll.c
index 01eea05b..af2ba8b3 100644
--- a/examples/cortex-a/armv8/spider/iccom/iccom_ll.c
+++ b/examples/cortex-a/armv8/spider/iccom/iccom_ll.c
@@ -5,7 +5,7 @@
 #include "tpl_compiler.h"
 
 uint32 ICCOM_CTA_MEMORY_CH0 = 0x47fc7000;
-uint32 ICCOM_CTA_MEMORY_CH1 = 0x47fc9000;
+uint32 ICCOM_CTA_MEMORY_CH1 = 0x47fc8000;
 
 #define GICD_ISENABLER     (0xf0000100)
 
-- 
2.25.1

